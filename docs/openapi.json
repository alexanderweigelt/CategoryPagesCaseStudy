{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "description": "",
    "version": "0.0.0"
  },
  "servers": [
    {
      "url": "/",
      "description": ""
    }
  ],
  "paths": {
    "/api/categories/{slug}": {
      "get": {
        "operationId": "getCategoryItem",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Category resource.",
        "description": "Retrieves a Category resource.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "putCategoryItem",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "links": {
              "GetCategoryItem": {
                "operationId": "getCategoryItem",
                "parameters": {
                  "slug": "$response.body#/slug"
                },
                "description": "The `slug` value returned in the response can be used as the `slug` parameter in `GET /api/categories/{slug}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Category resource.",
        "description": "Replaces the Category resource.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Category resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "deleteCategoryItem",
        "tags": [
          "Category"
        ],
        "responses": {
          "204": {
            "description": "Category resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Category resource.",
        "description": "Removes the Category resource.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "patchCategoryItem",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "Category resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "links": {
              "GetCategoryItem": {
                "operationId": "getCategoryItem",
                "parameters": {
                  "slug": "$response.body#/slug"
                },
                "description": "The `slug` value returned in the response can be used as the `slug` parameter in `GET /api/categories/{slug}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Category resource.",
        "description": "Updates the Category resource.",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Category resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/customers": {
      "get": {
        "operationId": "getCustomerCollection",
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "Customer collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Customer"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Customer resources.",
        "description": "Retrieves the collection of Customer resources.",
        "parameters": [],
        "deprecated": false
      },
      "post": {
        "operationId": "postCustomerCollection",
        "tags": [
          "Customer"
        ],
        "responses": {
          "201": {
            "description": "Customer resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "links": {
              "GetCustomerItem": {
                "operationId": "getCustomerItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/customers/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Customer resource.",
        "description": "Creates a Customer resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Customer resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/customers/{id}": {
      "get": {
        "operationId": "getCustomerItem",
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "Customer resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Customer resource.",
        "description": "Retrieves a Customer resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "putCustomerItem",
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "Customer resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "links": {
              "GetCustomerItem": {
                "operationId": "getCustomerItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/customers/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Customer resource.",
        "description": "Replaces the Customer resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Customer resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "deleteCustomerItem",
        "tags": [
          "Customer"
        ],
        "responses": {
          "204": {
            "description": "Customer resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Customer resource.",
        "description": "Removes the Customer resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "patchCustomerItem",
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "Customer resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            },
            "links": {
              "GetCustomerItem": {
                "operationId": "getCustomerItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/customers/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Customer resource.",
        "description": "Updates the Customer resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Customer resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/products": {
      "get": {
        "operationId": "getProductCollection",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product collection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "summary": "Retrieves the collection of Product resources.",
        "description": "Retrieves the collection of Product resources.",
        "parameters": [
          {
            "name": "categories",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false,
            "allowReserved": false
          },
          {
            "name": "categories[]",
            "in": "query",
            "description": "",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": true,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "post": {
        "operationId": "postProductCollection",
        "tags": [
          "Product"
        ],
        "responses": {
          "201": {
            "description": "Product resource created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "links": {
              "GetProductItem": {
                "operationId": "getProductItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Creates a Product resource.",
        "description": "Creates a Product resource.",
        "parameters": [],
        "requestBody": {
          "description": "The new Product resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    },
    "/api/products/{id}": {
      "get": {
        "operationId": "getProductItem",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Retrieves a Product resource.",
        "description": "Retrieves a Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "put": {
        "operationId": "putProductItem",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "links": {
              "GetProductItem": {
                "operationId": "getProductItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Replaces the Product resource.",
        "description": "Replaces the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Product resource",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "delete": {
        "operationId": "deleteProductItem",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Product resource deleted"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "summary": "Removes the Product resource.",
        "description": "Removes the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "deprecated": false
      },
      "patch": {
        "operationId": "patchProductItem",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Product resource updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            },
            "links": {
              "GetProductItem": {
                "operationId": "getProductItem",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/products/{id}`."
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Resource not found"
          },
          "422": {
            "description": "Unprocessable entity"
          }
        },
        "summary": "Updates the Product resource.",
        "description": "Updates the Product resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Resource identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            },
            "style": "simple",
            "explode": false,
            "allowReserved": false
          }
        ],
        "requestBody": {
          "description": "The updated Product resource",
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "deprecated": false
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string"
          },
          "productsData": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Customer": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          }
        }
      },
      "Product": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string"
          },
          "sku": {
            "type": "integer"
          },
          "price": {
            "type": "number"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "iri-reference"
            }
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {}
  },
  "security": [],
  "tags": []
}
