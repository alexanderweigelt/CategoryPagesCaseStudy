# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
APP_SECRET=
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
DATABASE_URL="mysql://symfony:symfony@db:3306/app?serverVersion=5.7"
# DATABASE_URL="postgresql://symfony:symfony@127.0.0.1:5432/app?serverVersion=13&charset=utf8"
###< doctrine/doctrine-bundle ###

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
###< nelmio/cors-bundle ###

# Docker Compose Project name. This prevent conflicts with already running projects which could have the same name if
# the container names are created with folder name as project name.
COMPOSE_PROJECT_NAME=category-pages-casestudy

# Tag your local image with unique id
IMAGE_TAG=1.0.0

# Configures the time (in seconds) a request to the Docker daemon is allowed to hang before Compose considers it failed.
# Defaults to 60 seconds.
COMPOSE_HTTP_TIMEOUT=600

# Set absolute path to the project root directory
COMPOSE_PROJECT_ROOT=./

# MYSQL Setup
# You should definitely change the password in production!
MYSQL_ROOT_PASSWORD=root
MYSQL_DATABASE=app
MYSQL_USER=symfony
MYSQL_PASSWORD=symfony

# httpd host setup
HTTP_VIRTUAL_HOST=app.docker
HTTP_DOCUMENT_ROOT=/var/www/html/public
HTTP_PROJECT_ROOT=/var/www/html

# Port mapping
PORT_HTTP=80
PORT_MYSQL=3306
PORT_SSH=2220

# Helper
XDEBUG_ENABLE=false
# The following values are accepted: off, develop, coverage, debug, gcstats, profile, trace
XDEBUG_MODE=off
SENDMAIL_ENABLE=false
